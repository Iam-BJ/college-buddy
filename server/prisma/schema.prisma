// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model User {
  id           String   @id @default(uuid())
  name         String
  email        String   @unique
  passwordHash String
  role         String   @default("student")
  reviews      Review[]
  createdAt    DateTime @default(now())
}
model Department {
  id         String       @id @default(uuid())
  name       String       @unique
  code       String       @unique
  courses    Course[]
  professors Professor[]
}
model Professor {
  id           String     @id @default(uuid())
  name         String
  email        String?    @unique
  departmentId String

  department   Department @relation(fields: [departmentId], references: [id])
  courses      Course[]
}
model Course {
  id           String     @id @default(uuid())
  name         String
  code         String     @unique
  courseType   String     // e.g., "Open Elective"
  offeredIn    String[]   // e.g., ["monsoon", "winter"]

  departmentId String
  professorId  String

  department   Department @relation(fields: [departmentId], references: [id])
  professor    Professor  @relation(fields: [professorId], references: [id])
  reviews      Review[]

  createdAt    DateTime   @default(now())
}
model Review {
  id               String   @id @default(uuid())
  reviewText       String
  materialRating   Int
  gradingRating    Int
  attendanceRating Int
  profRating       Int
  overallRating    Float    // derived
  userId           String
  courseId         String

  user    User    @relation(fields: [userId], references: [id])
  course  Course  @relation(fields: [courseId], references: [id])

  createdAt DateTime @default(now())
  @@unique([userId, courseId])
}
